{"version":3,"sources":["components/AddContactsForm/AddContactsForm.module.css","components/ContactsList/ContactsList.module.css","components/ContactsList/ContactsListItm/ContactsListItm.module.css","components/Section/Section.js","components/AddContactsForm/AddContactsForm.js","components/Filter/Filter.js","components/ContactsList/ContactsListItm/ContactsListItm.js","components/ContactsList/ContactsList.js","views/ContactsView.js"],"names":["module","exports","Section","title","children","AddContactsForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","contacts","props","checkUniq","onSubmit","some","i","alert","this","className","styles","form","input","onChange","type","pattern","required","btnAdd","Component","connect","phonebookSelectors","getAllContacts","dispatch","phonebookOperations","addContact","getFilter","changeFilter","target","ContactsListItm","onClickHendler","contact","typy","onClick","getFilteredContacts","onDeleteContact","id","deleteContact","length","contactsList","map","ContactsView","fetchContacts","isLoadingContacts","Container","getLoading"],"mappings":"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","file":"static/js/3.8000ced7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactsForm_form__3vXjX\",\"btnAdd\":\"AddContactsForm_btnAdd__1gV3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__16pH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsListItm_contact__2MbEu\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n const Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n  \r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from \"../../redux/phonebook/phonebook-selectors\";\r\n\r\nimport styles from './AddContactsForm.module.css'\r\n\r\nclass AddContactsForm extends Component {\r\n \r\n    state = {\r\n        name: '',\r\n        number:''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); \r\n        const { contacts } = this.props\r\n        const { name } = this.state\r\n        this.checkUniq(contacts, name);\r\n        this.setState({ name: '', number:'' });\r\n    };\r\n\r\n    checkUniq = (contacts, name) => {\r\n    const { onSubmit } = this.props\r\n        return contacts.some((i) => i.name === name)\r\n            ? alert(`${name} is already in contacts`)\r\n            : onSubmit(this.state.name, this.state.number)\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}\r\n                className={styles.form}\r\n            >\r\n              <label>\r\n                    Name\r\n                <input\r\n                        className={styles.input}\r\n                  value={ this.state.name}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  required\r\n                />\r\n              </label>              \r\n              <label>\r\n                    Number\r\n                <input\r\n                  value={ this.state.number}\r\n                  onChange={this.handleChange}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                  required\r\n                />\r\n                </label>\r\n                <button\r\n                    type=\"submit\"\r\n                    className={styles.btnAdd}\r\n                >\r\n                Add contact\r\n                </button>\r\n           </form>  \r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getAllContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number)=> dispatch(phonebookOperations.addContact(name, number))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContactsForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\nfunction Filter({ value, onChange}) {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <input type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )    \r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onFilterChange: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: phonebookSelectors.getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsListItm.module.css'\r\n\r\nexport default function ContactsListItm({name, number, onClickHendler}) {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <span>{name}: </span>\r\n            <span>{number}</span>\r\n            <button\r\n                typy=\"button\"\r\n                onClick={onClickHendler}\r\n            >                       \r\n            Delete\r\n            </button>\r\n        </li> \r\n   ) \r\n}\r\n\r\nContactsListItm.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickHendler: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\n\r\nimport ContactsListItm from './ContactsListItm'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            {contacts.length ?\r\n                <ul className={styles.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactsListItm\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onClickHendler={()=>onDeleteContact(id)}\r\n                />             \r\n            ))\r\n            }\r\n                </ul> :\r\n                <p>No contacts added</p>\r\n        }\r\n      </>  \r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\ncontacts: phonebookSelectors.getFilteredContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nonDeleteContact: id => dispatch(phonebookOperations.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phonebookOperations from '../redux/phonebook/phonebook-operations';\r\nimport phonebookSelectors from '../redux/phonebook/phonebook-selectors';\r\n\r\nimport Container from '../components/Container';\r\nimport Section from '../components/Section';\r\nimport AddContactsForm from '../components/AddContactsForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactsList';\r\n\r\nclass ContactsView extends Component { \r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  };\r\n\r\n  render() {\r\n    const {isLoadingContacts, contacts} = this.props\r\n    return (\r\n      <Container >\r\n        <Section\r\n          title={'Phonebook'}\r\n          children={\r\n            <AddContactsForm />\r\n          }\r\n        />\r\n        <Section\r\n          title={'Contacts'}\r\n        >\r\n          {\r\n            isLoadingContacts\r\n            ? <h1>Loading...</h1>\r\n              : <>\r\n              \r\n             {contacts.length>1 && <Filter />}\r\n              \r\n              <ContactList />\r\n            </>\r\n          }\r\n        </Section>\r\n      </Container>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: phonebookSelectors.getFilteredContacts(state),\r\n  isLoadingContacts: phonebookSelectors.getLoading(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\r\n});\r\n\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(ContactsView);"],"sourceRoot":""}