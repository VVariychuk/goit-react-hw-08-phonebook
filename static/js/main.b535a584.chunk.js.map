{"version":3,"sources":["redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-actions.js","components/Container/Container.module.css","components/Container/Container.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["getFilter","state","phonebook","filter","getAllContacts","contacts","getFilteredContacts","createSelector","name","toLowerCase","includes","getLoading","loading","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","addContact","number","contact","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","createAction","changeFilter","module","exports","Container","children","className","styles","container","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","createReducer","authActions","_","payload","token","setError","isAuthenticated","combineReducers","defaults","baseURL","headers","common","Authorization","register","credentials","response","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","getIsAuthenticated","getUsername","id","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","authReducer","phonebookReducer","devTools","process","persistor","persistStore","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","alignItems","marginRight","avatar","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b535a584.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phonebook.loading;\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getAllContacts = state => state.phonebook.contacts;\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) =>\r\n        contacts.filter(({ name }) =>name.toLowerCase().includes(filter.toLowerCase()))\r\n);\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getAllContacts,\r\n    getFilteredContacts,\r\n};","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,    \r\n} from './phonebook-actions'\r\n\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    }\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)))\r\n};\r\n\r\nexport default {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteContact,\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2wgSM\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport default function Container({children}) {\r\n    return (\r\n        <div className={styles.container}>{children}</div>\r\n    )\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './phonebook-actions'\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) =>  payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    \r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { phonebookReducer } from './phonebook';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n     auth: persistReducer(authPersistConfig, authReducer),\r\n     phonebook: phonebookReducer\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n});\r\n\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import { connect } from 'react-redux';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n    <nav>\r\n        <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n            Home\r\n        </NavLink>\r\n        {isAuthenticated && \r\n        <NavLink to=\"/contacts\" style={styles.link} activeStyle={styles.activeLink}>\r\n            Contacts\r\n        </NavLink>\r\n        }\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),  \r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.aa563b22.png\";","import { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n        alignItems: 'center',\r\n    marginRight: 15,\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({avatar, name, onLogout}) => (\r\n<div style={styles.container}>\r\n        <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n        <span style={styles.name}>Welcome, {name}</span>\r\n        <button type=\"button\" onClick = {onLogout}>\r\n            Logout\r\n        </button>\r\n</div>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUsername(state),\r\n    avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(UserMenu);","import { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n    marginRight: 15,\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink to=\"/register\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n            Sign Up\r\n        </NavLink>\r\n         <NavLink\r\n            to=\"/login\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n            Sign In\r\n        </NavLink>\r\n  </div>  \r\n);\r\n\r\nexport default AuthNav;","import { connect } from 'react-redux';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({isAuthenticated}) => (\r\n    <header style={styles.header}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu/> : <AuthNav/>}\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, {  Component, Suspense, lazy } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authOperations } from './redux/auth';\r\n\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar />\r\n\r\n        <Suspense fallback = {<h1>Loading...</h1>}>\r\n         <Switch>\r\n          <PublicRoute  exact path=\"/\" component={HomeView} />\r\n           <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterView}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginView}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={ContactsView}\r\n            />\r\n         </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store'\n\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>  \n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}